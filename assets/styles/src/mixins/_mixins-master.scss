/*** COMMON ***/

// Mobile Breakpoints
$breakpoints: (
  "phone":        400px,
  "phone-wide":   480px,
  "phablet":      560px,
  "tablet-small": 640px,
  "tablet":       861px,
  "tablet-wide":  1024px,
  "desktop":      1201px,
  "desktop-wide": 1341px
);
@mixin gc($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
// USAGE
/*
.site-header {
  padding: 2rem;
  font-size: 1.8rem;
  @include gc('tablet-wide') {
    padding-top: 4rem;
    font-size: 2.4rem;
  }
}
*/

// Input Placeholders
@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
// USAGE
/*
input,
textarea {
    @include input-placeholder {
        color: $grey;
    }
}
*/

/*** STYLING ***/

// Keyframe Animation
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}
@mixin animation($value) {
  -webkit-animation: $value;
  -moz-animation: $value;
  -ms-animation: $value;
  -o-animation: $value;
  animation: $value;
}
// USAGE
/*
@include keyframes(move) {
  0%   { left: 0; }
  100% { left: 100px; }
}

.box {
  @include animation(move 0.5s ease infinite alternate);
}
*/

// Font Styles
@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  @if $size { font-size: $size; }
  @if $colour { color: $colour; }
  @if $weight { font-weight: $weight; }
  @if $lh { line-height: $lh; }
}
// USAGE
/*
div {
  @include font-source-sans( 16px, #fff, 700, 18px );
}
*/

// Box Shadow Emboss
@mixin box-emboss($outerOpacity, $innerOpacity) {
  box-shadow:
    rgba(white, $outerOpacity) 0 1px 0,
    rgba(black, $innerOpacity) 0 1px 0 inset;
}
// USAGE
/*
.module, header[role="banner"] {
  @include box-emboss(0.3, 0.6);
}
*/

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity = $opacity-ie); //IE8
}
// USAGE
/*
.fade {
  @include opacity(.4);
}
*/

// Accessible hiding
@mixin screen-reader-text() {
  position: absolute;
  top: -9999px;
  left: -9999px;
}
// USAGE
/*
.screen-reader-text {
  @include screen-reader-text;
}
*/

// Pseudo selectors
%pseudos {
  content: '';
  position: absolute;
}
// USAGE
/*
*:before {
  @extend %pseudos;
}
*/

// Transform
// generic transform
@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
  transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
	@include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
  moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}
// USAGE
/*
.test {
  @include skew(25,10);
  @include transform-origin(top left);
}
*/

// Transition
@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -ms-transition:     $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}
@mixin transition-property($property...) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -ms-transition:              $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}
@mixin transition-duration($duration...) {
  -moz-transition-property:    $duration;
  -o-transition-property:      $duration;
  -ms-transition:              $duration;
  -webkit-transition-property: $duration;
  transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -ms-transition:                     $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -ms-transition:           $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}
// USAGE
/*
a {
  @include transition(background-color 1s .5s, color 2s);
}
*/

// Linear Gradient
@mixin linear-gradient($args...) {
  background-image: -o-linear-gradient($args);
  background-image: -moz-linear-gradient($args);
  background-image: -webkit-linear-gradient($args);
  background-image: linear-gradient($args);
}
// USAGE
/*
div {
  @include linear-gradient(45deg, black, white);
}
*/

// REMs
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}